@model JobSearch.Models.JobModel

@{
    ViewData["Title"] = "AddJob";
}

<h1>Add Job Application</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddJob">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Company" class="control-label"></label>
                <input asp-for="Company" class="form-control autofocus=" autofocus"" />
                <span asp-validation-for="Company" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Position" class="control-label"></label>
                <input asp-for="Position" class="form-control" />
                <span asp-validation-for="Position" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ELevel" class="control-label">Experience Level</label>
                @Html.DropDownListFor(
                         model => model.ELevel,
                         Html.GetEnumSelectList<JobSearch.Models.ELevels>()
                         .Select(e => new SelectListItem { Value = e.Text, Text = e.Text }),
                         "Select experience level",
                         new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label asp-for="Ongoing" class="control-label">Currently ongoing</label>
                <input asp-for="Ongoing" type="checkbox" checked="true" class="form-check-input" />
                <span asp-validation-for="Ongoing" class="text-danger"></span>
            </div>
         
            <div>
                @{
                    // Error messages
                    if (TempData["dateError"] != null)
                    {
                        <err class="err">
                            Error: @TempData["dateError"]
                        </err>
                    }
                    if (TempData["alreadyInUse"] != null)
                    {
                        <err class="err">
                            Error: @TempData["alreadyInUse"]
                        </err>
                    }
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
